datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(uuid())
  email String @unique
  name  String
  role  Role   @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean  @default(true)

  password Password?
  notes    Note[]
  checks   Check[]
  todos    Todo[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Check {
  id      String  @id @default(uuid())
  status  Status  @default(UNKNOWN)
  value   Float?
  text    String?
  comment String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean  @default(true)

  todo   Todo   @relation(fields: [todoId], references: [id])
  todoId String

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Todo {
  id String @id @default(uuid())

  remark     String
  title      String
  definition String?
  method     String?
  location   String?
  criteria   String?
  record     String?
  comments   String?

  userId      String
  referenceId String
  articleId   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean  @default(true)

  checks  Check[]
  periods Periodicity[]

  user      User      @relation(fields: [userId], references: [id])
  article   Article   @relation(fields: [articleId], references: [id])
  reference Reference @relation(fields: [referenceId], references: [id])
}

model Article {
  id   String @id @default(uuid())
  name String

  todos Todo[]
}

model Reference {
  id     String  @id @default(uuid())
  name   String
  active Boolean @default(true)
  todos  Todo[]
}

model Periodicity {
  id     String    @id @default(uuid())
  period Period?    @default(UNKNOWN)
  date   DateTime?

  todoId String
  todo   Todo   @relation(fields: [todoId], references: [id])

  @@unique([todoId, period])
  @@unique([todoId, date])
}

enum Role {
  ADMIN
  USER
}

enum Status {
  UNKNOWN
  CHECKED
  SUCCESS
  FAIL
}

enum Period {
  UNKNOWN
  DAY
  WEEK
  MONTH
  YEAR
}
